# -*- coding: utf-8 -*-

# lunarc configuration file
# configuration file with sample list (yaml list)
# hg38 genome directory

configfile: "/projects/fs3/raquelgg/z558/16.08.19/src/config_files/config.yaml"

LOCATION = config["location"]
KO = config["ko"]
CTRL = config["ctrl"]
CHIPSEQ = config["chipseq"]
# Run as:
# snakemake -s Snakefile_znf558_crispri -j 5 --cluster-config /projects/fs3/raquelgg/z558/16.08.19/src/config_files/lunarc_config.json --cluster "sbatch -A {cluster.account} -p {cluster.partition} --tasks-per-node {cluster.tasks-per-node}  -t {cluster.time} -o {cluster.o} -e {cluster.e} -J {cluster.J} -N {cluster.N}" --latency-wait 60

from snakemake.utils import R
import rpy2
import random

random.seed(10)

rule all:
    input:
        "../4_uniquemapping/TE_count_matrix_2.csv"

# UNIQUE MAPPING ----
rule mapping:
    input:
        "/projects/fs3/jakobssonlab/Seq036_Crispri_HP1B/fastq_files/{location}_R1.fastq.gz",
        "/projects/fs3/jakobssonlab/Seq036_Crispri_HP1B/fastq_files/{location}_R2.fastq.gz",
        "/projects/fs1/common/genome/lunarc/indicies/star/human/hg38/",
        "/projects/fs3/raquelgg/annotations/hg38/gencode/v30/gencode.v30.annotation.gtf"
    output:
        "../1_mapping/{location}_Aligned.out.bam",
        "../1_mapping/{location}_Aligned.sortedByCoord.out.bam"
    shell:
        """
        #echo Mapping reads from {wildcards.location} to hg38!
        ml GCC/5.4.0-2.26  OpenMPI/1.10.3
        ml STAR/2.6.0c

        STAR --runThreadN 10 \
        --readFilesCommand gunzip -c \
        --outSAMattributes All \
        --outSAMtype BAM Unsorted SortedByCoordinate\
        --genomeDir {input[2]} \
        --sjdbGTFfile {input[3]} \
        --outFileNamePrefix ../1_mapping/{wildcards.location}_ \
        --outFilterMultimapNmax 1 \
        --outFilterMismatchNoverLmax 0.03  \
        --readFilesIn  {input[0]} {input[1]}
        module purge
        """
rule indexing:
    input:
        "../5_stdmapping/{sample}_Aligned.sortedByCoord.out.bam"
    output:
        "../5_stdmapping/{sample}_Aligned.sortedByCoord.out.bam.bai"
    shell:
        """
        ml GCC/5.4.0-2.26  OpenMPI/1.10.3
        ml SAMtools/1.4

        samtools index -b {input}

        module purge
        """
rule bam_to_sam:
    input:
        "../1_mapping/{location}_Aligned.sortedByCoord.out.bam"
    output:
        "../1_mapping/{location}_Aligned.sortedByCoord.out.sam"
    shell:
        """
        ml GCC/7.3.0-2.30
        ml SAMtools/1.9

        samtools view -h -o {output} {input}

        module purge
        """
rule bigwig:
    input:
        "../5_stdmapping/{sample}_Aligned.sortedByCoord.out.bam",
        "../5_stdmapping/{sample}_Aligned.sortedByCoord.out.bam.bai"
    output:
        "../5_stdmapping/{sample}_Aligned.sortedByCoord.out.bw"
    shell:
        """
        ml GCC/5.4.0-2.26  OpenMPI/1.10.3
        ml Python/3.5.2

        bamCoverage --normalizeUsingRPKM -b {input[0]} -o {output}

        module purge
        """

rule featureCounts:
    input:
        annotation="/projects/fs3/raquelgg/annotations/hg38/gencode/v30/gencode.v30.annotation.gtf",
        samples=expand("../1_mapping/{sample}_Aligned.sortedByCoord.out.bam", sample=LOCATION)
    output:
        "../4_uniquemapping/0_featurecounts/gene_count_matrix_2.csv"
    shell:
        """
        ml GCC/7.3.0-2.30  OpenMPI/3.1.1
        ml Subread/1.6.3

        featureCounts -F GTF -s 2 -g gene_id -a {input.annotation} -o {output[2]} {input.samples}

        module purge
        """
rule featureCounts_TEs:
    input:
        annotation="/projects/fs3/raquelgg/annotations/hg38/repeatmasker/hg38_rmsk_TEtranscripts.gtf",
        samples=expand("../1_mapping/{sample}_Aligned.sortedByCoord.out.bam", sample=LOCATION)
    output:
        "../4_uniquemapping/TE_count_matrix_2.csv"
    shell:
        """
        ml GCC/7.3.0-2.30  OpenMPI/3.1.1
        ml Subread/1.6.3

        featureCounts -s 2 -F GTF -g transcript_id -a {input.annotation} -o {output[2]} {input.samples}

        module purge
        """
        
# MULTUMAPPING ----
rule multimapping:
    input:
        "/projects/fs3/jakobssonlab/Seq036_Crispri_HP1B/fastq_files/{location}_R1.fastq.gz",
        "/projects/fs3/jakobssonlab/Seq036_Crispri_HP1B/fastq_files/{location}_R2.fastq.gz",
        "/projects/fs1/common/genome/lunarc/indicies/star/human/hg38/",
        "/projects/fs3/raquelgg/annotations/hg38/gencode/v30/gencode.v30.annotation.gtf"
    output:
        "../2_multimapping/{location}_Aligned.out.bam",
        "../2_multimapping/{location}_Aligned.sortedByCoord.out.bam"
    shell:
        """
        echo Mapping reads from {wildcards.location} to hg38!
        ml GCC/5.4.0-2.26  OpenMPI/1.10.3
        ml STAR/2.6.0c

        STAR --runThreadN 10 \
        --readFilesCommand gunzip -c \
        --outSAMattributes All \
        --outSAMtype BAM Unsorted SortedByCoordinate \
        --sjdbGTFfile {input[3]} \
        --genomeDir {input[2]} \
        --outFileNamePrefix ../2_multimapping/{wildcards.location}_ \
        --outFilterMultimapNmax 100 \
        --winAnchorMultimapNmax 200  \
        --readFilesIn  {input[0]} {input[1]}
        module purge
        """

rule multimap_indexing:
    input:
        "../5_multimapping/{location}Aligned.sortedByCoord.out.bam"
    output:
        "../5_multimapping/{location}Aligned.sortedByCoord.out.bam.bai"
    shell:
        """
        ml GCC/5.4.0-2.26  OpenMPI/1.10.3
        ml SAMtools/1.4

        samtools index -b {input}

        module purge
        """
rule multimap_bigwig:
    input:
        "../5_multimapping/{location}Aligned.sortedByCoord.out.bam",
        "../5_multimapping/{location}Aligned.sortedByCoord.out.bam.bai"
    output:
        "../5_multimapping/{location}Aligned.sortedByCoord.out.bw"
    shell:
        """
        ml GCC/5.4.0-2.26  OpenMPI/1.10.3
        ml Python/3.5.2

        bamCoverage -b {input[0]} -o {output}

        module purge
        """
rule multimap_ucsc:
    input:
     "../5_multimapping/{location}Aligned.sortedByCoord.out.bw"
    output:
     "../5_multimapping/{location}ucsc.tracks.txt"
    shell:
     """
         exp=$(echo {wildcards.location} | awk -F "/" '{{print $1}}')
         cond=$(echo {wildcards.location} | awk -F "/" '{{print $3}}')
         sample=$(echo {wildcards.location} | awk -F "/" '{{print $3}}')
         ml ncftp
         ncftpput -u rgarza -p ucscpass1 bone.bmc.lu.se Public {input}

         basename=$(basename {input})
         echo "track type=bigWig name=$sample visibility=full smoothingWindow=4 autoScale=on description=$sample.$exp.$cond bigDataUrl=ftp://bone.bmc.lu.se/Public/$basename color=0,0,255" > {output}

         module purge
     """

rule TEtranscripts:
    input:
        ko=expand("../2_multimapping/{ko}_Aligned.sortedByCoord.out.bam", ko=KO),
        ctrl=expand("../2_multimapping/{ctrl}_Aligned.sortedByCoord.out.bam", ctrl=CTRL),
        gtf="/projects/fs3/raquelgg/annotations/hg38/gencode/v30/gencode.v30.annotation.gtf",
        TEgtf="/projects/fs3/raquelgg/annotations/hg38/repeatmasker/hg38_rmsk_TEtranscripts.gtf"
    output:
        "../3_TEtranscripts/z558_DESeq2.R"
    shell:
        """
        ml icc/2017.1.132-GCC-6.3.0-2.27  impi/2017.1.132
        ml TEToolkit/2.0.3-Python-2.7.13

        TEtranscripts -t {input.ko} \
        -c {input.ctrl} --stranded reverse --GTF {input.gtf} --TE {input.TEgtf} --format BAM --sortByPos --mode multi --project ../3_TEtranscripts/z558

        module purge
        """

